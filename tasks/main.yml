---
# Ref: https://docs.docker.com/engine/installation/linux/linux-postinstall/

- name: Add yum repository
  yum_repository: name=docker-ce description='Docker CE Stable' baseurl=https://download.docker.com/linux/centos/7/$basearch/stable enabled=0 gpgcheck=1 gpgkey=https://download.docker.com/linux/centos/gpg

- name: Install python module for ansible
  yum: name=python-pip state=present enablerepo=docker-ce

- name: Install docker {{docker_version}}
  yum: name={{docker_packages}} state={{docker_packages_state}} enablerepo=docker-ce allow_downgrade=yes
  notify: Restart docker

- block:
    - name: Find latest version of docker compose
      uri: url=https://api.github.com/repos/docker/compose/releases/latest
      register: docker__r_compose_latest
      when: docker_compose_version == 'latest'

    - name: Install docker compose as a container wrapper
      get_url: dest=/usr/local/bin/docker-compose url=https://github.com/docker/compose/releases/download/{{docker__r_compose_latest.json.tag_name if docker_compose_version == 'latest' else docker_compose_version}}/run.sh owner=root group=root mode='0755' force=yes
  when: docker_compose_install

- name: Make sure docker group is present
  group: name=docker state=present

- name: Add users to docker group
  user: name={{item}} groups=docker append=yes createhome=yes state=present
  with_items: '{{docker_users}}'

- name: Check kernel compatibility (>= 3.10)
  assert: that='ansible_kernel.split("-")[0] is version("3.10", ">=")' msg='Kernel version not compatible with docker'

- import_tasks: user_namespace.yml
  when: docker_user_namespace

- name: Make sure docker directory exists
  file: path=/etc/docker state=directory mode=0700 owner=root group=root

- name: Install server certificate
  import_tasks: certificates.yml
  when:
    - docker_ca_cert is defined and docker_ca_cert
    - docker_server_cert is defined and docker_server_cert
    - docker_server_key is defined and docker_server_key

- name: Configure docker hosts/listeners
  set_fact:
    docker_config: '{{ {"hosts": docker_hosts} | combine(docker_config) }}'

- name: Configure daemon
  copy: dest=/etc/docker/daemon.json content='{{docker_config | to_nice_json}}' mode=0644 owner=root group=root
  notify: Restart docker

- name: Make sure systemd service directory exists
  file: path=/etc/systemd/system/docker.service.d state=directory mode=0755 owner=root group=root

- name: Remove docker daemon options from systemd unit
  template: dest=/etc/systemd/system/docker.service.d/start.conf src=start.conf.j2 mode=0644 owner=root group=root
  notify: Reload systemd and docker

- name: Add environment variables to systemd
  template: dest=/etc/systemd/system/docker.service.d/env.conf src=env.conf.j2 mode=0644 owner=root group=root
  notify: Reload systemd and docker
  when: docker_env != {}

- name: Enable service
  service: name=docker state=started enabled=yes

- name: Init swarm
  docker_swarm: state=present advertise_addr='{{docker_swarm_addr | default(omit)}}'
  when: docker_swarm_init | bool
